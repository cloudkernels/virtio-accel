name: Create firecracker vmlinux & virtio module

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: [self-hosted, "${{ matrix.arch }}" ]
    strategy:
      matrix:
        arch: [x86_64, aarch64]
      fail-fast: false

    steps:
      - name: Find SHA
        run: |
          if [[ "${{github.event.pull_request.head.sha}}" != "" ]]
          then
            echo "ARTIFACT_SHA=$(echo ${{github.event.pull_request.head.sha}})" >> $GITHUB_ENV
          else
            echo "ARTIFACT_SHA=$(echo ${{github.sha}})" >> $GITHUB_ENV
          fi

      - name: Install building deps
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libz-dev bin86 bison flex bc libelf-dev libssl-dev wget zip

        # This is hardcoded for now in the version of linux that Firecracker works with
      - name: Set kernel version
        run: echo "RELEASE_VERSION=v4.20" >> $GITHUB_ENV

      - name: Fetch virtio-accel
        uses: actions/checkout@v2
        with:
          path: virtio-accel

      - name: Fetch linux kernel
        uses: actions/checkout@v2
        with:
          repository: torvalds/linux
          ref: ${{ env.RELEASE_VERSION }}
          fetch-depth: 1
          path: linux

      - name: Fetch firecracker config & build
        id: build-vmlinux
        working-directory: linux
        run: |
          if [[ "${{ matrix.arch }}" == "aarch64" ]]
          then
            wget https://raw.githubusercontent.com/firecracker-microvm/firecracker/master/resources/microvm-kernel-arm64.config
            wget https://raw.githubusercontent.com/nubificus/fc-aarch64-guest-build/main/aarch64_config.patch
            patch -p0 < aarch64_config.patch
            mv microvm-kernel-arm64.config arch/arm64/configs/microvm.config
            echo '::set-output name=artifact_pathing::arch/arm64/boot/Image'
            touch .config
            make microvm.config
            make Image -j$(nproc)
            sudo mv arch/arm64/boot/Image vmlinux
          else
            wget https://raw.githubusercontent.com/firecracker-microvm/firecracker/master/resources/microvm-kernel-x86_64.config -O arch/x86/configs/microvm.config
            echo '::set-output name=artifact_pathing::vmlinux'
            touch .config
            make microvm.config
            make vmlinux -j$(nproc)
          fi


      - name: Build virtio-accel
        id: build-virtio
        working-directory: virtio-accel
        run: make KDIR=../linux ZC=0

      - name: Upload linux Image
        id: upload-image
        uses: cloudkernels/minio-upload@master
        with:
          url: https://s3.nubificus.co.uk
          access-key: ${{ secrets.AWS_ACCESS_KEY }}
          secret-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          local-path: linux/vmlinux
          remote-path: nbfc-assets/github/virtio-accel/${{ env.ARTIFACT_SHA }}/${{ matrix.arch }}/linux/

      - name: Upload virtio
        id: upload-virtio
        uses: cloudkernels/minio-upload@master
        with:
          url: https://s3.nubificus.co.uk
          access-key: ${{ secrets.AWS_ACCESS_KEY }}
          secret-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          local-path: virtio-accel/virtio_accel.ko
          remote-path: nbfc-assets/github/virtio-accel/${{ env.ARTIFACT_SHA }}/${{ matrix.arch }}/linux/
